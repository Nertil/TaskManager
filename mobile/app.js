/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    paths: {
        Ux: 'app/Ux'
    }
});


Ext.application({

    requires: [
        'Ext.Loader',
        'Ext.MessageBox',
        'Ux.locale.override.st.field.Field',
        'Ux.locale.override.st.form.FieldSet',
        'Ux.locale.override.st.navigation.Bar',
        'Ux.locale.override.st.navigation.View',
        'Ux.locale.override.st.picker.Picker',
        'Ux.locale.override.st.Button',
        'Ux.locale.override.st.Component',
        'Ux.locale.override.st.Container',
        'Ux.locale.override.st.DataView',
        'Ux.locale.override.st.LoadMask',
        'Ux.locale.override.st.TitleBar',
        'Ux.locale.Manager',
        'Ux.locale.override.st.field.DatePicker',
        'Ux.locale.override.st.picker.Date'
    ],
    models: [
        'Task',
        'User'
    ],
    stores: [
        'Tasks'
    ],
    views: [
        'LoginNavView',
        'TaskList',
        'TaskPanel',
        'WelcomePanel',
        'RegisterPanel',
        'LoginPanel',
        'MessageLabel',
        'TaskNavView'
    ],
    controllers: [
        'Tasks',
        'Account'
    ],
    name: 'TaskManager',

    launch: function() {
        //save the server url where to find REST webservice
        TaskManager.restUrl = 'http://178.239.178.23/task_manager/rest/';
        Ux.locale.Manager.setConfig({
            ajaxConfig: {
                method: 'GET'
            },
            language: navigator.language? navigator.language.split('-')[0] : navigator.userLanguage.split('-')[0],
            tpl: 'app/locales/{locale}.json',
            //language: 'id',
            //tpl: 'app/locales/it.json',
            type: 'ajax'
        });
        Ux.locale.Manager.init(this.localesReady);
    },

    localesReady: function() {
        Ext.create('TaskManager.view.LoginNavView', {fullscreen: true});
        if (Ux.locale.Manager.isLoaded()) {
            var B = Ext.MessageBox;
            Ext.apply(B, {
                OK: {text: Ux.locale.Manager.get("buttons.ok")},
                CANCEL: {text: Ux.locale.Manager.get("buttons.cancel")},
                YES: {text: Ux.locale.Manager.get("buttons.yes")},
                NO: {text: Ux.locale.Manager.get("buttons.no")}
            });
            Ext.apply(B, {
                OKCANCEL: [B.CANCEL, B.OK],
                YESNOCANCEL: [B.CANCEL, B.NO, B.YES],
                YESNO: [B.NO, B.YES]
                // Add additional button collections here
            });
        }
    }

});
